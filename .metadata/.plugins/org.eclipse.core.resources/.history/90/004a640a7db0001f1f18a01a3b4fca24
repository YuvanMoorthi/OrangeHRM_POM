package com.orangehrm.qa.testcases;

import org.testng.annotations.AfterMethod;
import org.testng.annotations.BeforeMethod;
import org.testng.annotations.Test;

import com.orangehrm.qa.pages.LoginPage;

public class LoginPageTest {
	LoginPage loginpage;

	public LoginPageTest() {
		super();
	}

	@BeforeMethod
	public void SetUp() {
		initialization();
		loginpage = new LoginPage();
	}

	@Test(priority = 1)
	public void validateBrandLogoTest() {
		boolean validateBrandLogo = loginpage.validateBrandLogo();
		Assert.assertTrue(validateBrandLogo, "Brand logo is not Displayed");
	}

	@Test(priority = 2)
	public void validateLogoHeaderTest() {
		boolean validateLogoheader = loginpage.validateLogoHeader();
		Assert.assertTrue(validateLogoheader, "Logo header is not Displayed");
	}

	@Test(priority = 3)
	public void validateDemoUserTest() {
		boolean validateDemoUser = loginpage.validateDemoUser();
		Assert.assertTrue(validateDemoUser, "Demo username is not Displayed");
	}

	@Test(priority = 4)
	public void validateDemoPasswordTest() {
		boolean validateDemoPassword = loginpage.validateDemoPassword();
		Assert.assertTrue(validateDemoPassword, "Demo password is not Displayed");
	}

	@Test(priority = 5)
	public void validateIconUserTest() {
		boolean validateIconUser = loginpage.validateIconUser();
		Assert.assertTrue(validateIconUser, "Icon user is not Displayed");
	}

	@Test(priority = 6)
	public void validateIconPersonTest() {
		boolean validateIconPerson = loginpage.validateIconPerson();
		Assert.assertTrue(validateIconPerson, "Icon person is not Displayed");
	}

	@Test(priority = 7)
	public void validateViewUsernameTest() {
		boolean validateViewUsername = loginpage.validateViewUsername();
		Assert.assertTrue(validateViewUsername, "View username is not Displayed");
	}

	@Test(priority = 8)
	public void validateViewPasswordTest() {
		boolean validateViewPassword = loginpage.validateViewPassword();
		Assert.assertTrue(validateViewPassword, "View password is not Displayed");
	}

	@Test(priority = 9)
	public void validateViewVersionTest() {
		boolean validateViewVersion = loginpage.validateViewVersion();
		Assert.assertTrue(validateViewVersion, "View version is not isplayed");
	}

	@Test(priority = 10)
	public void validateViewCopyRightsTest() {
		boolean validateViewCopyRights = loginpage.validateViewCopyRights();
		Assert.assertTrue(validateViewCopyRights, "View copyrights is not isplayed");
	}

	@Test(priority = 11)
	public void validateViewSocialLinksTest() {
		boolean validateViewSocialLinks = loginpage.validateViewSocialLinks();
		Assert.assertTrue(validateViewSocialLinks, "View social links is not isplayed");
	}

	@Test(priority = 12)
	public void clickOnForgtPasswordLinkTest() {
		loginpage.clickOnForgotPasswordLink();
	}

	@Test(priority = 12)
	public void clickOrangehrmWebsiteTest() {
		loginpage.clickOrangehrmWebsite();

	}

	@Test(priority = 13)
	public void verifyLoginTest() {
		loginpage.enterLoginCredentials(prop.getProperty("username"), prop.getProperty("password"));
	}

	@AfterMethod
	public void TearDown() {
		driver.quit();
	}
}
